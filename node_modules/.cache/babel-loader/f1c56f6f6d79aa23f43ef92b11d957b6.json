{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactProjects\\\\PlaceMatch\\\\frontend\\\\src\\\\user\\\\pages\\\\Authenticate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Input from '../../shared/components/FormElement/Input';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/components/util/validators';\nimport Button from '../../shared/components/FormElement/Button';\nimport { useForm } from '../../shared/components/hooks/form-hook';\nimport '../../places/pages/PlaceForrm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authenticate = () => {\n  _s();\n\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const authenticateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  const switchModeHandler = () => {\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: authenticateSubmitHandler,\n    children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n      element: \"input\",\n      id: \"name\",\n      type: \"text\",\n      label: \"Your Name\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter your name \",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"email\",\n      element: \"input\",\n      type: \"email\",\n      label: \"E-Mail\",\n      validators: [VALIDATOR_EMAIL()],\n      errorText: \"please enter valid email-id.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"password\",\n      element: \"input\",\n      type: \"password\",\n      label: \"Password\",\n      validators: [VALIDATOR_MINLENGTH(6)],\n      errorText: \"please enter the valid password (at least 6 characters).\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isValid,\n      children: isLoginMode ? \"LOGIN\" : \"SIGNUP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      inverse: true,\n      onClick: switchModeHandler,\n      children: [\"SWITCH TO \", isLoginMode ? \"SIGNUP\" : \"LOGGIN\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authenticate, \"nMGROtOjSESj3HzDrq1gbaZGm+0=\", false, function () {\n  return [useForm];\n});\n\n_c = Authenticate;\nexport default Authenticate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authenticate\");","map":{"version":3,"sources":["C:/ReactProjects/PlaceMatch/frontend/src/user/pages/Authenticate.js"],"names":["React","useState","Input","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","useForm","Authenticate","isLoginMode","setIsLoginMode","formState","inputHandler","email","value","isValid","password","authenticateSubmitHandler","event","preventDefault","console","log","inputs","switchModeHandler","prevMode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AAEA,OAAOC,KAAP,MAAkB,2CAAlB;AACA,SAASC,eAAT,EAA0BC,mBAA1B,EAA+CC,iBAA/C,QAAuE,yCAAvE;AACA,OAAOC,MAAP,MAAmB,4CAAnB;AACA,SAASC,OAAT,QAAwB,yCAAxB;AACA,OAAO,mCAAP;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAK,CAACC,WAAD,EAAaC,cAAb,IAA6BT,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAM,CAAEU,SAAF,EAAaC,YAAb,IAA6BL,OAAO,CAAC;AACvCM,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,OAAO,EAAE;AAFJ,KADgC;AAKvCC,IAAAA,QAAQ,EAAE;AACRF,MAAAA,KAAK,EAAE,EADC;AAERC,MAAAA,OAAO,EAAE;AAFD;AAL6B,GAAD,EAUtC,KAVsC,CAA1C;;AAYE,QAAME,yBAAyB,GAAGC,KAAK,IAAG;AACxCA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAS,CAACW,MAAtB;AACD,GAHD;;AAKA,QAAMC,iBAAiB,GAAG,MAAK;AAC7Bb,IAAAA,cAAc,CAACc,QAAQ,IAAI,CAACA,QAAd,CAAd;AACD,GAFD;;AAIF,sBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEP,yBAAvC;AAAA,eACG,CAACR,WAAD,iBACC,QAAC,KAAD;AACE,MAAA,OAAO,EAAC,OADV;AAEE,MAAA,EAAE,EAAC,MAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAC,WAJR;AAKE,MAAA,UAAU,EAAE,CAACJ,iBAAiB,EAAlB,CALd;AAME,MAAA,SAAS,EAAC,yBANZ;AAOE,MAAA,OAAO,EAAEO;AAPX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYE,QAAC,KAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,KAAK,EAAC,QAJR;AAKE,MAAA,UAAU,EAAE,CAACT,eAAe,EAAhB,CALd;AAME,MAAA,SAAS,EAAC,8BANZ;AAOE,MAAA,OAAO,EAAES;AAPX;AAAA;AAAA;AAAA;AAAA,YAZF,eAqBE,QAAC,KAAD;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAC,UAJR;AAKE,MAAA,UAAU,EAAE,CAACR,mBAAmB,CAAC,CAAD,CAApB,CALd;AAME,MAAA,SAAS,EAAC,0DANZ;AAOE,MAAA,OAAO,EAAEQ;AAPX;AAAA;AAAA;AAAA;AAAA,YArBF,eA8BE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,CAACD,SAAS,CAACI,OAA3C;AAAA,gBACGN,WAAW,GAAG,OAAH,GAAa;AAD3B;AAAA;AAAA;AAAA;AAAA,YA9BF,eAiCE,QAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAEc,iBAAzB;AAAA,+BACad,WAAW,GAAG,QAAH,GAAc,QADtC;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA/DD;;GAAMD,Y;UAG+BD,O;;;KAH/BC,Y;AAiEN,eAAeA,YAAf","sourcesContent":["import React,{ useState } from 'react';\r\n\r\nimport Input from '../../shared/components/FormElement/Input';\r\nimport { VALIDATOR_EMAIL ,VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE} from '../../shared/components/util/validators';\r\nimport Button from '../../shared/components/FormElement/Button';\r\nimport { useForm } from '../../shared/components/hooks/form-hook'\r\nimport '../../places/pages/PlaceForrm.css';\r\n\r\nconst Authenticate = () => {\r\n  const[isLoginMode,setIsLoginMode]=useState(true);\r\n\r\n  const [ formState, inputHandler ]= useForm({\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n  \r\n    },false);\r\n\r\n    const authenticateSubmitHandler = event =>{\r\n      event.preventDefault();\r\n      console.log(formState.inputs);\r\n    };\r\n\r\n    const switchModeHandler = () =>{\r\n      setIsLoginMode(prevMode => !prevMode )\r\n    };\r\n\r\n  return (\r\n    <form className=\"place-form\" onSubmit={authenticateSubmitHandler}>\r\n      {!isLoginMode && (\r\n        <Input\r\n          element=\"input\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          label=\"Your Name\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter your name \"\r\n          onInput={inputHandler}\r\n        />\r\n      )}\r\n      <Input\r\n        id=\"email\"\r\n        element=\"input\"\r\n        type=\"email\"\r\n        label=\"E-Mail\"\r\n        validators={[VALIDATOR_EMAIL()]}\r\n        errorText=\"please enter valid email-id.\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Input\r\n        id=\"password\"\r\n        element=\"input\"\r\n        type=\"password\"\r\n        label=\"Password\"\r\n        validators={[VALIDATOR_MINLENGTH(6)]}\r\n        errorText=\"please enter the valid password (at least 6 characters).\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Button type=\"submit\" disabled={!formState.isValid}>\r\n        {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n      </Button>\r\n      <Button inverse onClick={switchModeHandler}>\r\n        SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGGIN\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Authenticate;"]},"metadata":{},"sourceType":"module"}