{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactProjects\\\\PlaceMatch\\\\frontend\\\\src\\\\places\\\\pages\\\\NewPlace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElement/Input';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/components/util/validators';\nimport Button from '../../shared/components/FormElement/Button';\nimport { useForm } from '../../shared/components/hooks/form-hook';\nimport './PlaceForrm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPlace = () => {\n  _s();\n\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const placeSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid title.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please enter a valid description (at least 5 characters).\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"address\",\n      element: \"input\",\n      label: \"Address\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter the valid address\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isValid,\n      children: \"ADD PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPlace, \"0epxsH5OvIlpRhBArGGQbINoHMk=\", false, function () {\n  return [useForm];\n});\n\n_c = NewPlace;\nexport default NewPlace; // import React, { useCallback, useReducer } from 'react';\n// import Input from '../../shared/components/FormElement/Input';\n// import Button from '../../shared/components/FormElement/Button';\n// import { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/components/util/validators';\n// import './NewPlace.css';\n// const formReducer = (state, action) => {\n//   switch (action.type) {\n//     case 'INPUT_CHANGE':\n//       let formIsValid = true;\n//       for (const inputId in state.inputs) {\n//         if (inputId === action.inputId) {\n//           formIsValid = formIsValid && action.isValid;\n//         } else {\n//           formIsValid = formIsValid && state.inputs[inputId].isValid;\n//         }\n//       }\n//       return {\n//         ...state,\n//         inputs: {\n//           ...state.inputs,\n//           [action.inputId]: { value: action.value, isValid: action.isValid }\n//         },\n//         isValid: formIsValid\n//       };\n//     default:\n//       return state;\n//   }\n// };\n// const NewPlace = () => {\n//   const [formState, dispatch] = useReducer(formReducer, {\n//     inputs: {\n//       title: {\n//         value: '',\n//         isValid: false\n//       },\n//       description: {\n//         value: '',\n//         isValid: false\n//       }\n//     },\n//     isValid: false\n//   });\n//   const inputHandler = useCallback((id, value, isValid) => {\n//     dispatch({\n//       type: 'INPUT_CHANGE',\n//       value: value,\n//       isValid: isValid,\n//       inputId: id\n//     });\n//   }, []);\n//   return (\n//     <form className=\"place-form\">\n//       <Input\n//         id=\"title\"\n//         element=\"input\"\n//         type=\"text\"\n//         label=\"Title\"\n//         validators={[VALIDATOR_REQUIRE()]}\n//         errorText=\"Please enter a valid title.\"\n//         onInput={inputHandler}\n//       />\n//       <Input\n//         id=\"description\"\n//         element=\"textarea\"\n//         label=\"Description\"\n//         validators={[VALIDATOR_MINLENGTH(5)]}\n//         errorText=\"Please enter a valid description (at least 5 characters).\"\n//         onInput={inputHandler}\n//       />\n//       <Button type=\"submit\" disabled={!formState.isValid}>\n//         ADD PLACE\n//       </Button>\n//     </form>\n//   );\n// };\n// export default NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"sources":["C:/ReactProjects/PlaceMatch/frontend/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","useForm","NewPlace","formState","inputHandler","title","value","isValid","description","address","placeSubmitHandler","event","preventDefault","console","log","inputs"],"mappings":"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","sourcesContent":["import React, { useCallback, useReducer } from 'react';\r\n\r\nimport Input from '../../shared/components/FormElement/Input';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/components/util/validators';\r\nimport Button from '../../shared/components/FormElement/Button';\r\nimport {useForm} from '../../shared/components/hooks/form-hook'\r\nimport './PlaceForrm.css';\r\n\r\n\r\n\r\nconst NewPlace = () => {\r\n  const [ formState, inputHandler ]= useForm({\r\n    title: {\r\n      value: '',\r\n      isValid: false\r\n    },\r\n    description: {\r\n      value: '',\r\n      isValid: false\r\n    },\r\n    address:{\r\n      value: '',\r\n      isValid: false\r\n    }\r\n\r\n  },false);\r\n\r\n \r\n\r\n  const placeSubmitHandler = event =>{\r\n    event.preventDefault();\r\n    console.log(formState.inputs);\r\n  }\r\n\r\n\r\n  return (\r\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n      <Input\r\n        id=\"title\"\r\n        element=\"input\"\r\n        type=\"text\"\r\n        label=\"Title\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid title.\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Input\r\n        id=\"description\"\r\n        element=\"textarea\"\r\n        label=\"Description\"\r\n        validators={[VALIDATOR_MINLENGTH(5)]}\r\n        errorText=\"Please enter a valid description (at least 5 characters).\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Input\r\n        id=\"address\"\r\n        element=\"input\"\r\n        label=\"Address\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter the valid address\"\r\n        onInput={inputHandler}\r\n      />\r\n    <Button type=\"submit\" disabled ={!formState.isValid }>ADD PLACE</Button>\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n\r\n\r\n// import React, { useCallback, useReducer } from 'react';\r\n\r\n// import Input from '../../shared/components/FormElement/Input';\r\n// import Button from '../../shared/components/FormElement/Button';\r\n// import { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/components/util/validators';\r\n// import './NewPlace.css';\r\n\r\n// const formReducer = (state, action) => {\r\n//   switch (action.type) {\r\n//     case 'INPUT_CHANGE':\r\n//       let formIsValid = true;\r\n//       for (const inputId in state.inputs) {\r\n//         if (inputId === action.inputId) {\r\n//           formIsValid = formIsValid && action.isValid;\r\n//         } else {\r\n//           formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n//         }\r\n//       }\r\n//       return {\r\n//         ...state,\r\n//         inputs: {\r\n//           ...state.inputs,\r\n//           [action.inputId]: { value: action.value, isValid: action.isValid }\r\n//         },\r\n//         isValid: formIsValid\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const NewPlace = () => {\r\n//   const [formState, dispatch] = useReducer(formReducer, {\r\n//     inputs: {\r\n//       title: {\r\n//         value: '',\r\n//         isValid: false\r\n//       },\r\n//       description: {\r\n//         value: '',\r\n//         isValid: false\r\n//       }\r\n//     },\r\n//     isValid: false\r\n//   });\r\n\r\n//   const inputHandler = useCallback((id, value, isValid) => {\r\n//     dispatch({\r\n//       type: 'INPUT_CHANGE',\r\n//       value: value,\r\n//       isValid: isValid,\r\n//       inputId: id\r\n//     });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <form className=\"place-form\">\r\n//       <Input\r\n//         id=\"title\"\r\n//         element=\"input\"\r\n//         type=\"text\"\r\n//         label=\"Title\"\r\n//         validators={[VALIDATOR_REQUIRE()]}\r\n//         errorText=\"Please enter a valid title.\"\r\n//         onInput={inputHandler}\r\n//       />\r\n//       <Input\r\n//         id=\"description\"\r\n//         element=\"textarea\"\r\n//         label=\"Description\"\r\n//         validators={[VALIDATOR_MINLENGTH(5)]}\r\n//         errorText=\"Please enter a valid description (at least 5 characters).\"\r\n//         onInput={inputHandler}\r\n//       />\r\n//       <Button type=\"submit\" disabled={!formState.isValid}>\r\n//         ADD PLACE\r\n//       </Button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default NewPlace;\r\n"]},"metadata":{},"sourceType":"module"}