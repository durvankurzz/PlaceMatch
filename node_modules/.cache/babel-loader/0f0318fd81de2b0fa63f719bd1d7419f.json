{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactProjects\\\\PlaceMatch\\\\frontend\\\\src\\\\places\\\\pages\\\\NewPlace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElement/Input';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/components/util/validators';\nimport Button from '../../shared/components/FormElement/Button';\nimport './PlaceForrm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  _s();\n\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const placeSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid title.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please enter a valid description (at least 5 characters).\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"address\",\n      element: \"input\",\n      label: \"Address\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter the valid address\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isValid,\n      children: \"ADD PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPlace, \"VUHSeEu64nPJt/b7TGABv/MsZFI=\");\n\n_c = NewPlace;\nexport default NewPlace; // import React, { useCallback, useReducer } from 'react';\n// import Input from '../../shared/components/FormElement/Input';\n// import Button from '../../shared/components/FormElement/Button';\n// import { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/components/util/validators';\n// import './NewPlace.css';\n// const formReducer = (state, action) => {\n//   switch (action.type) {\n//     case 'INPUT_CHANGE':\n//       let formIsValid = true;\n//       for (const inputId in state.inputs) {\n//         if (inputId === action.inputId) {\n//           formIsValid = formIsValid && action.isValid;\n//         } else {\n//           formIsValid = formIsValid && state.inputs[inputId].isValid;\n//         }\n//       }\n//       return {\n//         ...state,\n//         inputs: {\n//           ...state.inputs,\n//           [action.inputId]: { value: action.value, isValid: action.isValid }\n//         },\n//         isValid: formIsValid\n//       };\n//     default:\n//       return state;\n//   }\n// };\n// const NewPlace = () => {\n//   const [formState, dispatch] = useReducer(formReducer, {\n//     inputs: {\n//       title: {\n//         value: '',\n//         isValid: false\n//       },\n//       description: {\n//         value: '',\n//         isValid: false\n//       }\n//     },\n//     isValid: false\n//   });\n//   const inputHandler = useCallback((id, value, isValid) => {\n//     dispatch({\n//       type: 'INPUT_CHANGE',\n//       value: value,\n//       isValid: isValid,\n//       inputId: id\n//     });\n//   }, []);\n//   return (\n//     <form className=\"place-form\">\n//       <Input\n//         id=\"title\"\n//         element=\"input\"\n//         type=\"text\"\n//         label=\"Title\"\n//         validators={[VALIDATOR_REQUIRE()]}\n//         errorText=\"Please enter a valid title.\"\n//         onInput={inputHandler}\n//       />\n//       <Input\n//         id=\"description\"\n//         element=\"textarea\"\n//         label=\"Description\"\n//         validators={[VALIDATOR_MINLENGTH(5)]}\n//         errorText=\"Please enter a valid description (at least 5 characters).\"\n//         onInput={inputHandler}\n//       />\n//       <Button type=\"submit\" disabled={!formState.isValid}>\n//         ADD PLACE\n//       </Button>\n//     </form>\n//   );\n// };\n// export default NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"sources":["C:/ReactProjects/PlaceMatch/frontend/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","NewPlace","formState","dispatch","title","description","address","inputHandler","id","placeSubmitHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useCallback, useReducer } from 'react';\r\n\r\nimport Input from '../../shared/components/FormElement/Input';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/components/util/validators';\r\nimport Button from '../../shared/components/FormElement/Button';\r\nimport './PlaceForrm.css';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        }\r\n        else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst NewPlace = () => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      address:{\r\n        value: '',\r\n        isValid: false\r\n      }\r\n\r\n    },\r\n  isValid: false\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({ type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId: id });\r\n  }, []);\r\n\r\n  const placeSubmitHandler = event =>{\r\n    event.preventDefault();\r\n    console.log(formState.inputs);\r\n  }\r\n\r\n\r\n  return (\r\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n      <Input\r\n        id=\"title\"\r\n        element=\"input\"\r\n        type=\"text\"\r\n        label=\"Title\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid title.\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Input\r\n        id=\"description\"\r\n        element=\"textarea\"\r\n        label=\"Description\"\r\n        validators={[VALIDATOR_MINLENGTH(5)]}\r\n        errorText=\"Please enter a valid description (at least 5 characters).\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Input\r\n        id=\"address\"\r\n        element=\"input\"\r\n        label=\"Address\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter the valid address\"\r\n        onInput={inputHandler}\r\n      />\r\n    <Button type=\"submit\" disabled ={!formState.isValid }>ADD PLACE</Button>\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n\r\n\r\n// import React, { useCallback, useReducer } from 'react';\r\n\r\n// import Input from '../../shared/components/FormElement/Input';\r\n// import Button from '../../shared/components/FormElement/Button';\r\n// import { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/components/util/validators';\r\n// import './NewPlace.css';\r\n\r\n// const formReducer = (state, action) => {\r\n//   switch (action.type) {\r\n//     case 'INPUT_CHANGE':\r\n//       let formIsValid = true;\r\n//       for (const inputId in state.inputs) {\r\n//         if (inputId === action.inputId) {\r\n//           formIsValid = formIsValid && action.isValid;\r\n//         } else {\r\n//           formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n//         }\r\n//       }\r\n//       return {\r\n//         ...state,\r\n//         inputs: {\r\n//           ...state.inputs,\r\n//           [action.inputId]: { value: action.value, isValid: action.isValid }\r\n//         },\r\n//         isValid: formIsValid\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const NewPlace = () => {\r\n//   const [formState, dispatch] = useReducer(formReducer, {\r\n//     inputs: {\r\n//       title: {\r\n//         value: '',\r\n//         isValid: false\r\n//       },\r\n//       description: {\r\n//         value: '',\r\n//         isValid: false\r\n//       }\r\n//     },\r\n//     isValid: false\r\n//   });\r\n\r\n//   const inputHandler = useCallback((id, value, isValid) => {\r\n//     dispatch({\r\n//       type: 'INPUT_CHANGE',\r\n//       value: value,\r\n//       isValid: isValid,\r\n//       inputId: id\r\n//     });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <form className=\"place-form\">\r\n//       <Input\r\n//         id=\"title\"\r\n//         element=\"input\"\r\n//         type=\"text\"\r\n//         label=\"Title\"\r\n//         validators={[VALIDATOR_REQUIRE()]}\r\n//         errorText=\"Please enter a valid title.\"\r\n//         onInput={inputHandler}\r\n//       />\r\n//       <Input\r\n//         id=\"description\"\r\n//         element=\"textarea\"\r\n//         label=\"Description\"\r\n//         validators={[VALIDATOR_MINLENGTH(5)]}\r\n//         errorText=\"Please enter a valid description (at least 5 characters).\"\r\n//         onInput={inputHandler}\r\n//       />\r\n//       <Button type=\"submit\" disabled={!formState.isValid}>\r\n//         ADD PLACE\r\n//       </Button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default NewPlace;\r\n"]},"metadata":{},"sourceType":"module"}